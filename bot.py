import requests
import time
import os
import json
import random
from urllib.parse import unquote

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
BOT_TOKEN = os.getenv("BOT_TOKEN")
USER_ID = int(os.getenv("USER_ID"))
PRICE_LIMIT_RUB = 7700
SEARCH_QUERY = "Samsung A06"

# –°–ø–∏—Å–æ–∫ User-Agent –¥–ª—è —Ä–æ—Ç–∞—Ü–∏–∏, —á—Ç–æ–±—ã —Å–Ω–∏–∑–∏—Ç—å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
user_agents = [
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/115.0.0.0 Safari/537.36",
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Firefox/109.0",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36",
    "Mozilla/5.0 (Linux; Android 10) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.5359.128 Mobile Safari/537.36",
    "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36"
]

def send_message(text):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram."""
    try:
        url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
        payload = {"chat_id": USER_ID, "text": text, "parse_mode": "Markdown"}
        response = requests.post(url, data=payload, timeout=10)
        response.raise_for_status()
        print(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

def get_random_headers():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π –Ω–∞–±–æ—Ä –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤."""
    return {
        "User-Agent": random.choice(user_agents),
        "Accept": "application/json, text/plain, */*",
        "Accept-Language": "ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7",
        "Connection": "keep-alive"
    }

def check_wildberries():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ü–µ–Ω—ã –Ω–∞ Wildberries."""
    print(f"=== –ü—Ä–æ–≤–µ—Ä–∫–∞ Wildberries –Ω–∞ {SEARCH_QUERY} ===")
    url = "https://catalog.wb.ru/catalog/exactmatch/v4/products"
    params = {
        "appType": 1,
        "curr": "rub",
        "dest": -1257723,
        "regions": "80,38,4,64,83,33,68,70,69,30,22,66,48,1,31,6,40,71",
        "query": SEARCH_QUERY,
        "resultset": "catalog",
        "spp": 29
    }

    try:
        response = requests.get(url, params=params, headers=get_random_headers(), timeout=15)
        response.raise_for_status()
        data = response.json()

        products = data.get("data", {}).get("products", [])
        if not products:
            print("WB: –¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
            return

        for product in products:
            name = product.get("name", "–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            price_in_rub = product.get("salePriceU", 0) / 100
            if price_in_rub <= PRICE_LIMIT_RUB and SEARCH_QUERY.lower() in name.lower():
                product_id = product.get("id")
                link = f"https://www.wildberries.ru/catalog/{product_id}/detail.aspx"
                msg = f"üî• *Wildberries*\n\n*–¢–æ–≤–∞—Ä:* {name}\n*–¶–µ–Ω–∞:* {price_in_rub} ‚ÇΩ\n[–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä]({link})"
                send_message(msg)
                
    except requests.exceptions.RequestException as e:
        print(f"–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ Wildberries: {e}")
        send_message(f"‚ö† *–û—à–∏–±–∫–∞ Wildberries:* –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
    except Exception as e:
        print(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ Wildberries: {e}")
        send_message(f"‚ö† *–û—à–∏–±–∫–∞ Wildberries:* –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞.")

def check_ozon():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ü–µ–Ω—ã –Ω–∞ Ozon."""
    print(f"=== –ü—Ä–æ–≤–µ—Ä–∫–∞ Ozon –Ω–∞ {SEARCH_QUERY} ===")
    url = "https://www.ozon.ru/search/"
    params = {
        "text": SEARCH_QUERY
    }
    
    headers = {
        "User-Agent": random.choice(user_agents),
        "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7",
        "Accept-Language": "ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7",
        "Connection": "keep-alive",
        "Upgrade-Insecure-Requests": "1"
    }

    try:
        response = requests.get(url, params=params, headers=headers, timeout=15)
        response.raise_for_status()
        
        # Ozon —Ç–µ–ø–µ—Ä—å —á–∞—Å—Ç–æ –æ—Ç–¥–∞—ë—Ç JS-–∫–æ–¥. –ü—Ä–æ—â–µ –Ω–∞–π—Ç–∏ –¥–∞–Ω–Ω—ã–µ –≤ HTML-—Å—Ç—Ä–∞–Ω–∏—Ü–µ.
        if "catalogItems" in response.text:
            start_index = response.text.find('"catalogItems":[') + len('"catalogItems":[') -1
            end_index = response.text.find('],"filters"', start_index)
            
            json_str = response.text[start_index:end_index] + "]"
            
            products_data = json.loads(json_str)
            found_product = False
            
            for item in products_data:
                name = item.get("mainState", [{}])[0].get("title", "–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                price = item.get("mainState", [{}])[1].get("atom", {}).get("price", {}).get("price", 0)
                
                if price and price <= PRICE_LIMIT_RUB and SEARCH_QUERY.lower() in name.lower():
                    link = "https://www.ozon.ru" + item.get("action", {}).get("link", "")
                    msg = f"üî• *Ozon*\n\n*–¢–æ–≤–∞—Ä:* {name}\n*–¶–µ–Ω–∞:* {price} ‚ÇΩ\n[–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä]({link})"
                    send_message(msg)
                    found_product = True
            
            if not found_product:
                print("Ozon: –¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
        else:
            print("Ozon: –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –¥–∞–Ω–Ω—ã–µ –æ —Ç–æ–≤–∞—Ä–∞—Ö –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ.")
            send_message(f"‚ö† *–û—à–∏–±–∫–∞ Ozon:* –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏–∑–º–µ–Ω–∏–ª–∞—Å—å. –ë–æ—Ç —Ç—Ä–µ–±—É–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.")

    except requests.exceptions.RequestException as e:
        print(f"–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ Ozon: {e}")
        send_message(f"‚ö† *–û—à–∏–±–∫–∞ Ozon:* –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
    except Exception as e:
        print(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ Ozon: {e}")
        send_message(f"‚ö† *–û—à–∏–±–∫–∞ Ozon:* –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞.")

if __name__ == "__main__":
    send_message(f"‚úÖ *–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!*\n\n–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ç–æ–≤–∞—Ä–∞: *{SEARCH_QUERY}*\n–õ–∏–º–∏—Ç —Ü–µ–Ω—ã: *{PRICE_LIMIT_RUB} ‚ÇΩ*\n–ü—Ä–æ–≤–µ—Ä–∫–∞ –±—É–¥–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å—Å—è –∫–∞–∂–¥—ã–µ 2 –º–∏–Ω—É—Ç—ã.")
    
    while True:
        try:
            check_wildberries()
            check_ozon()
        except Exception as e:
            print(f"–û–±—â–∞—è –æ—à–∏–±–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ü–∏–∫–ª–µ: {e}")
            send_message(f"‚ö† *–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:* –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ü–∏–∫–ª–µ –±–æ—Ç–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏.")
            
        print("---")
        time.sleep(120)  # –ü–∞—É–∑–∞ 2 –º–∏–Ω—É—Ç—ã
