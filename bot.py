import requests
import time
import os
import json
from bs4 import BeautifulSoup

# --- –ù–ê–°–¢–†–û–ô–ö–ò ---
BOT_TOKEN = os.getenv("BOT_TOKEN")  # –¢–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
USER_ID = int(os.getenv("USER_ID"))  # –¢–≤–æ–π Telegram user_id
PRICE_LIMIT_AMD = 36000
AMD_TO_RUB = 0.18  # –ü—Ä–∏–º–µ—Ä–Ω—ã–π –∫—É—Ä—Å (1 –¥—Ä–∞–º = 0.18 —Ä—É–±.)

# --- –§–£–ù–ö–¶–ò–ò –î–õ–Ø –û–¢–ü–†–ê–í–ö–ò ---
def send_message(text):
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
    data = {"chat_id": USER_ID, "text": text}
    requests.post(url, data=data)

# --- –û–ë–†–ê–ë–û–¢–ö–ê –ö–û–ú–ê–ù–î ---
def handle_command(message):
    if not message:
        return
    text = message.get('text')
    if text == "/start":
        send_message("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç!")

# --- –ü–†–û–í–ï–†–ö–ê WildBerries —á–µ—Ä–µ–∑ API ---
def check_wb():
    search_url = "https://search.wb.ru/exactmatch/ru/common/v4/search"
    params = {
        "appType": "1",
        "curr": "rub",
        "dest": "-1257786",
        "query": "samsung a06",
        "resultset": "catalog",
        "sort": "popular",
        "spp": "30",
    }
    try:
        r = requests.get(search_url, params=params)
        data = r.json()
        products = data.get("data", {}).get("products", [])
        for product in products:
            name = product.get("name", "")
            price_rub = product.get("salePriceU", 0) / 100  # –≤ API —Ü–µ–Ω–∞ –≤ –∫–æ–ø–µ–π–∫–∞—Ö
            price_amd = int(price_rub / AMD_TO_RUB)

            if "a06" in name.lower() and price_amd < PRICE_LIMIT_AMD:
                link = f"https://www.wildberries.ru/catalog/{product.get('id')}/detail.aspx"
                send_message(f"üî• WildBerries: {name}\n–¶–µ–Ω–∞: {price_amd} –¥—Ä–∞–º\n–°—Å—ã–ª–∫–∞: {link}")
    except Exception as e:
        send_message(f"‚ö† –û—à–∏–±–∫–∞ WB: {e}")

# --- –ü–†–û–í–ï–†–ö–ê Ozon —á–µ—Ä–µ–∑ JSON ---
def check_ozon():
    search_url = "https://www.ozon.ru/search/?from_global=true&text=samsung%20a06"
    try:
        r = requests.get(search_url, headers={"User-Agent": "Mozilla/5.0"})
        soup = BeautifulSoup(r.text, "html.parser")
        scripts = soup.find_all("script")

        for script in scripts:
            if "searchResultsV2" in script.text:
                try:
                    json_text = script.text.strip()
                    start = json_text.find('{')
                    end = json_text.rfind('}') + 1
                    data = json.loads(json_text[start:end])
                    items = data.get("searchResultsV2", {}).get("items", [])

                    for item in items:
                        name = item.get("cellTrackingInfo", {}).get("product", {}).get("title", "")
                        price_rub = item.get("cellTrackingInfo", {}).get("product", {}).get("price", {}).get("price", 0)
                        price_amd = int(price_rub / AMD_TO_RUB)

                        if "a06" in name.lower() and price_amd < PRICE_LIMIT_AMD:
                            link = "https://www.ozon.ru" + item.get("link", "")
                            send_message(f"üî• Ozon: {name}\n–¶–µ–Ω–∞: {price_amd} –¥—Ä–∞–º\n–°—Å—ã–ª–∫–∞: {link}")
                except Exception:
                    continue
    except Exception as e:
        send_message(f"‚ö† –û—à–∏–±–∫–∞ Ozon: {e}")

# --- –ó–ê–ü–£–°–ö ---
if __name__ == "__main__":
    send_message(f"‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –õ–∏–º–∏—Ç: {PRICE_LIMIT_AMD} –¥—Ä–∞–º. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 2 –º–∏–Ω—É—Ç—ã.")
    offset = 0
    while True:
        try:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–∞–Ω–¥
            url = f"https://api.telegram.org/bot{BOT_TOKEN}/getUpdates?offset={offset}"
            response = requests.get(url).json()

            for update in response.get('result', []):
                handle_command(update.get('message'))
                offset = update['update_id'] + 1

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–Ω
            check_wb()
            check_ozon()

        except Exception as e:
            send_message(f"‚ö† –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")

        time.sleep(120)  # –∫–∞–∂–¥—ã–µ 2 –º–∏–Ω—É—Ç—ã

